{"version":3,"file":"component---src-pages-404-tsx-d581db03e6d9dbf00c73.js","mappings":"iQAiKA,EArJsB,WACpB,IAAMA,GAAQC,EAAAA,EAAAA,KACRC,GAAOC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,GAAG,MAAO,CACrDC,gBAAgB,IAGlB,OACE,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CACEC,GAAI,CACFC,MAAO,EACPC,OAAQ,EACRC,SAAU,WAGZ,gBAACC,EAAA,EAAD,CAAWC,SAAU,EAAGC,SAAU,EAAGC,SAAU,CAAEC,GAAI,EAAGC,GAAI,OAC1D,gBAACV,EAAA,EAAD,CACEW,QAAS,OACTC,cAAe,CAAEC,GAAI,SAAUH,GAAI,OACnCI,SAAU,YAEV,gBAACd,EAAA,EAAD,CACEE,MAAO,EACPa,MAAO,CAAEF,GAAI,EAAGH,GAAI,GACpBC,QAAS,OACTK,WAAY,UAEZ,gBAACX,EAAA,EAAD,KACE,gBAACL,EAAA,EAAD,KACE,gBAACiB,EAAA,EAAD,CACEC,QAAQ,KACRC,UAAW,KACXC,MAAO1B,EAAO,OAAS,SACvBO,GAAI,CAAEoB,WAAY,MAJpB,OAQA,gBAACJ,EAAA,EAAD,CACEC,QAAQ,KACRC,UAAU,IACVG,MAAM,iBACNF,MAAO1B,EAAO,OAAS,UAJzB,4CAOE,2BAPF,iDAQiD,IAC/C,gBAAC6B,EAAA,EAAD,CAAMC,KAAM,GAAIC,UAAU,QAA1B,YAIF,gBAACzB,EAAA,EAAD,CACE0B,UAAW,EACXf,QAAS,OACTgB,eAAgB,CAAEd,GAAI,SAAUH,GAAI,eAEpC,gBAACkB,EAAA,EAAD,CACET,UAAWI,EAAAA,EACXL,QAAQ,YACRI,MAAM,UACNO,KAAK,QACLL,KAAM,KALR,iBAaR,gBAACxB,EAAA,EAAD,CACEC,GAAI,CACF6B,KAAM,CAAEjB,GAAI,WAAYH,GAAI,WAC5BI,SAAU,WACVN,SAAU,CAAEK,GAAI,OAAQH,GAAI,OAC5BK,MAAO,CAAEF,GAAI,EAAGH,GAAI,GACpBqB,UAAW,CAAElB,GAAI,OAAQH,GAAI,wBAG/B,gBAACV,EAAA,EAAD,CACEC,GAAI,CACFC,MAAO,CAAEW,GAAI,EAAGH,GAAI,QACpBP,OAAQ,OACRW,SAAU,aAGZ,gBAACd,EAAA,EAAD,CACEC,GAAI,CACFC,MAAO,OACPC,OAAQ,OACRC,SAAU,WAGZ,gBAACJ,EAAA,EAAD,CACEC,GAAI,CACFG,SAAU,SACV4B,KAAM,KACN9B,MAAO,EACPC,OAAQ,EACRW,SAAU,CAAED,GAAI,WAAYH,GAAI,YAChCuB,SAAU,CACRpB,GAAI,OACJH,GAAI,+CAENwB,aAAc,CACZrB,GAAI,OACJH,GAAI,iDAIR,gBAACV,EAAA,EAAD,CACEC,GAAI,CACFE,OAAQ,CAAEU,GAAI,OAAQH,GAAI,GAC1B,QAAS,CACPyB,UAAW,SAEb,4BAA6B,CAC3BhC,OAAQ,EACRD,MAAO,KAIX,gBAACF,EAAA,EAAD,CACEmB,UAAWiB,EAAAA,cACXC,OAAO,OACPC,IACE,2DAEFnC,OAAQ,CAAEU,GAAI,OAAQH,GAAI,GAC1B6B,UAAW,CAAE1B,GAAI,IAAKH,GAAI,GAC1BR,MAAO,EACPM,SAAU,EACVP,GAAI,CACFuC,OACyB,SAAvBhD,EAAMiD,QAAQC,KACV,kBACA,oBC3IhC,EAJsB,WACpB,OAAO,gBAAC,EAAD","sources":["webpack://penzionPeta/./src/views/NotFoundCover/NotFoundCover.tsx","webpack://penzionPeta/./src/pages/404.tsx"],"sourcesContent":["import React from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nimport Main from 'layouts/Main';\nimport Container from 'components/Container';\n\nconst NotFoundCover = (): JSX.Element => {\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  return (\n    <Main>\n      <Box\n        sx={{\n          width: 1,\n          height: 1,\n          overflow: 'hidden',\n        }}\n      >\n        <Container paddingX={0} paddingY={0} maxWidth={{ sm: 1, md: 1236 }}>\n          <Box\n            display={'flex'}\n            flexDirection={{ xs: 'column', md: 'row' }}\n            position={'relative'}\n          >\n            <Box\n              width={1}\n              order={{ xs: 2, md: 1 }}\n              display={'flex'}\n              alignItems={'center'}\n            >\n              <Container>\n                <Box>\n                  <Typography\n                    variant=\"h1\"\n                    component={'h1'}\n                    align={isMd ? 'left' : 'center'}\n                    sx={{ fontWeight: 700 }}\n                  >\n                    404\n                  </Typography>\n                  <Typography\n                    variant=\"h6\"\n                    component=\"p\"\n                    color=\"text.secondary\"\n                    align={isMd ? 'left' : 'center'}\n                  >\n                    Oops! Looks like you followed a bad link.\n                    <br />\n                    If you think this is a problem with us, please{' '}\n                    <Link href={''} underline=\"none\">\n                      tell us\n                    </Link>\n                  </Typography>\n                  <Box\n                    marginTop={4}\n                    display={'flex'}\n                    justifyContent={{ xs: 'center', md: 'flex-start' }}\n                  >\n                    <Button\n                      component={Link}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"large\"\n                      href={'/'}\n                    >\n                      Back home\n                    </Button>\n                  </Box>\n                </Box>\n              </Container>\n            </Box>\n            <Box\n              sx={{\n                flex: { xs: '0 0 100%', md: '0 0 50%' },\n                position: 'relative',\n                maxWidth: { xs: '100%', md: '50%' },\n                order: { xs: 1, md: 2 },\n                minHeight: { xs: 'auto', md: 'calc(100vh - 58px)' },\n              }}\n            >\n              <Box\n                sx={{\n                  width: { xs: 1, md: '50vw' },\n                  height: '100%',\n                  position: 'relative',\n                }}\n              >\n                <Box\n                  sx={{\n                    width: '100%',\n                    height: '100%',\n                    overflow: 'hidden',\n                  }}\n                >\n                  <Box\n                    sx={{\n                      overflow: 'hidden',\n                      left: '0%',\n                      width: 1,\n                      height: 1,\n                      position: { xs: 'relative', md: 'absolute' },\n                      clipPath: {\n                        xs: 'none',\n                        md: 'polygon(10% 0%, 100% 0, 100% 100%, 0% 100%)',\n                      },\n                      shapeOutside: {\n                        xs: 'none',\n                        md: 'polygon(10% 0%, 100% 0, 100% 100%, 0% 100%)',\n                      },\n                    }}\n                  >\n                    <Box\n                      sx={{\n                        height: { xs: 'auto', md: 1 },\n                        '& img': {\n                          objectFit: 'cover',\n                        },\n                        '& .lazy-load-image-loaded': {\n                          height: 1,\n                          width: 1,\n                        },\n                      }}\n                    >\n                      <Box\n                        component={LazyLoadImage}\n                        effect=\"blur\"\n                        src={\n                          'https://assets.maccarianagency.com/backgrounds/img23.jpg'\n                        }\n                        height={{ xs: 'auto', md: 1 }}\n                        maxHeight={{ xs: 300, md: 1 }}\n                        width={1}\n                        maxWidth={1}\n                        sx={{\n                          filter:\n                            theme.palette.mode === 'dark'\n                              ? 'brightness(0.7)'\n                              : 'none',\n                        }}\n                      />\n                    </Box>\n                  </Box>\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        </Container>\n      </Box>\n    </Main>\n  );\n};\n\nexport default NotFoundCover;\n","import React from 'react';\nimport NotFoundCover from 'views/NotFoundCover';\n\nconst FourOFourPage = (): JSX.Element => {\n  return <NotFoundCover />;\n};\n\nexport default FourOFourPage;\n"],"names":["theme","useTheme","isMd","useMediaQuery","breakpoints","up","defaultMatches","Main","Box","sx","width","height","overflow","Container","paddingX","paddingY","maxWidth","sm","md","display","flexDirection","xs","position","order","alignItems","Typography","variant","component","align","fontWeight","color","Link","href","underline","marginTop","justifyContent","Button","size","flex","minHeight","left","clipPath","shapeOutside","objectFit","LazyLoadImage","effect","src","maxHeight","filter","palette","mode"],"sourceRoot":""}